#
# =======================
# Collection of Java Libs
# =======================
#
#
# Description:  Bookmarks of Java projects.
#
# Author:       Lars Heuer <heuer[at]semagia.com>
#
# License:      Public Domain
#
# Date:         2011-10-07
# 
# Modified:     2013-03-02
# 
%prefix dc <http://purl.org/dc/elements/1.1/>
%prefix p <http://psi.semagia.com/java-projects/>
%prefix doap <http://usefulinc.com/ns/doap#>
%prefix wp <http://en.wikipedia.org/wiki/>

def uses($project, $lib)
  #TODO
  depends-on(project: $project, dependency: $lib)
end

def nhd($t, $name, $homepage, $description)
    $t - $name; doap:homepage: $homepage; doap:description: $description.
end

def ml($t, $iri)
    $t doap:mailing-list: $iri.
end

def tracker($t, $iri)
    $t doap:bug-database: $iri.
end

p:SVGMap
  nhd("SVGMap", <http://bg.upf.edu/svgmap/>,
      """The aim of SVGMap is helping in the visualisation of experimental data which are associated with some graphical representation.
SVGMap is a data browser which allows to generate images with colored areas corresponding to the chosen data and color scale.""")
.

p:Persistit
  nhd("Persistit", <http://akiban.github.com/persistit/>,
      """A fast, transactional, Java B+Tree library.""")
.

p:MapDB
  nhd("MapDB", <http://www.mapdb.org/>,
      """MapDB provides concurrent TreeMap and HashMap backed by disk storage or off-heap memory. It is a fast, scalable and easy to use embedded Java database engine.""")
.

p:OpenRefine
  nhd("OpenRefine", <https://github.com/OpenRefine/OpenRefine>,
      """OpenRefine is a free, open source power tool for working with messy data and improving it""")
.

p:sprotocol 
  nhd("sprotocol", <https://github.com/mischat/sprotocol>,
      """Java SPARQL Client Library""");
.

p:Blueredis
  nhd("Blueredis", <https://github.com/dmitriid/blueredis>,
      """This is a straightforward and rather naïve implementation of a Blueprints-enabled graph over Redis.

Blueprints is a database-agnostic library for handling graphs. Blueredis allows you to run Blueprints on top of redis. Also see Pipes and Gremlin to see what this integration will also allow you to do""");
.


p:tuProlog
  nhd("tuProlog", <http://alice.unibo.it/xwiki/bin/view/Tuprolog/>,
      "tuProlog is a light-weight Prolog system for distributed applications and infrastructures, 
intentionally designed around a minimal core (containing only the most essential properties of a Prolog engine), 
to be later configured by (statically and dynamically) loading/unloading libraries of predicates. 
tuProlog also natively supports multi-paradigm programming, providing a clean, seamless integration model between Prolog and mainstream object-oriented languages -- namely Java");
.

p:Jedis
  nhd("Jedis", <https://github.com/xetorthio/jedis>,
      "Jedis is a Redis Java client.");
.

p:SnakeYAML
  nhd("SnakeYAML", <https://code.google.com/p/snakeyaml/>,
      "YAML parser and emitter for Java");
.

p:SCON
  nhd("SCON", <https://code.google.com/p/scon/>,
      """An implementation of JDBC for accessing SPARQL endpoints.

The goal of this project is to transparently allow JDBC code run against a SPARQL endpoint. Ultimately, any operations that make sense in SPARQL and RDF should be possible through this API. This will allow anyone familiar with JDBC to easily interface with SPARQL, or to use JDBC tools to communicate with a SPARQL endpoint.""");
  uses(p:mrg);
.

p:MALLET
  nhd("MALLET", <http://mallet.cs.umass.edu/>,
      """MALLET is a Java-based package for statistical natural language processing, document classification, clustering, topic modeling, information extraction, and other machine learning applications to text.
MALLET includes sophisticated tools for document classification: efficient routines for converting text to "features", a wide variety of algorithms (including Naïve Bayes, Maximum Entropy, and Decision Trees), and code for evaluating classifier performance using several commonly used metrics.""");
.

p:SemanticVectors
  nhd("Semantic Vectors", <https://code.google.com/p/semanticvectors/>,
      "SemanticVectors creates semantic WordSpace models from free natural language text. Such models are designed to represent words and documents in terms of underlying concepts.");
.

p:mrg isa wp:Triplestore
  nhd("MRG", <https://code.google.com/p/mrg/>,
      "MRG allows Java developers to easily load, view and construct RDF graphs. 
An API is provided that allows simple access to graph components, including RDF collections.");
.

p:orientdb-jdbc
  nhd("OrientDB JDBC", <https://github.com/robfrank/orientdb-jdbc>,
      "OrientDb JDBC Driver");
.

p:JWPL
  nhd("JWPL (Java Wikipedia Library)", <https://code.google.com/p/jwpl/>,
      "JWPL (Java Wikipedia Library) is a free, Java-based application programming interface that allows to access all information contained in Wikipedia.

Core features:

    Fast and efficient access to Wikipedia
    Parser for the MediaWiki syntax
    Language independent 

In addition to the core functionality, JWPL allows access to Wikipedia's edit history with the Wikipedia Revision Toolkit.

Features of the Wikipedia Revision Toolkit:

    Tools for reconstructing past states of Wikipedia (TimeMachine)
    Efficient access to all article revisions (RevisionMachine)
    Dedicated revision storage format");
    ml(<https://groups.google.com/group/jwpl>);
.
